{"version":3,"file":"static/js/276.d8fbcda6.chunk.js","mappings":"yMAWaA,EAAMC,EAAAA,GAAAA,IAAH,gHAIZC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,G,sECnBSC,E,QAAOR,GAAAA,KAAH,8O,yGCAJS,EAAQT,EAAAA,GAAAA,MAAH,+EAKLU,EAAQV,EAAAA,GAAAA,MAAH,oZ,sECLLW,E,QAAQX,GAAAA,GAAH,+D,SCCLY,EAAU,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACxB,OAAO,SAACF,EAAD,UAAQE,GAChB,C,sECHYC,E,QAAMd,GAAAA,OAAH,uU,SCEHe,EAAe,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,KAAMC,EAAW,EAAXA,KACnC,OAAO,SAACH,EAAD,CAAKG,KAAMA,EAAX,SAAkBD,GAC1B,C,2KCEYE,EAAY,WACvB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAAgCF,EAAAA,EAAAA,UAAS,IAAzC,eAAOG,EAAP,KAAiBC,EAAjB,KAOMC,EAAe,SAAC,GAAiC,IAAD,IAA9BC,OAAUC,EAAoB,EAApBA,KAAMC,EAAc,EAAdA,MACtC,OAAQD,GACN,IAAK,QACH,OAAOL,EAASM,GAClB,IAAK,WACH,OAAOJ,EAAYI,GACrB,QACE,OAEL,EAQD,OACE,UAAC,IAAD,CAAMC,aAAa,MAAMC,SAPN,SAAAC,GACnBA,EAAIC,iBACJd,GAASe,EAAAA,EAAAA,IAAM,CAAEZ,MAAAA,EAAOE,SAAAA,KAjBxBD,EAAS,IACTE,EAAY,GAkBb,EAGC,WACE,UAAC1B,EAAA,EAAD,CAAKoC,GAAG,OAAR,WACE,UAAC,IAAD,oBAEE,SAAC,EAAAC,EAAD,CACEnB,KAAK,QACLW,KAAK,QACLC,MAAOP,EACPe,SAAUX,QAGd,UAAC,IAAD,uBAEE,SAAC,EAAAU,EAAD,CACEnB,KAAK,WACLW,KAAK,WACLC,MAAOL,EACPa,SAAUX,WAIhB,SAACX,EAAA,EAAD,CAAcE,KAAK,SAASD,KAAK,aAGtC,EC7CD,EAXc,WACZ,OACE,gCACE,SAACJ,EAAA,EAAD,CAASC,MAAM,YACf,SAACd,EAAA,EAAD,CAAKoC,GAAG,OAAR,UACE,SAACjB,EAAD,QAIP,C","sources":["components/Box.jsx","components/Form/Form.styled.jsx","components/Form/FormInput/FormInput.styled.jsx","components/Heading/Heading.styled.jsx","components/Heading/Heading.jsx","components/SubmitButton/SubmitButton.styled.jsx","components/SubmitButton/SubmitButton.jsx","components/Form/LoginForm/LoginForm.jsx","pages/Login.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  color,\n  space,\n  typography,\n  layout,\n  flexbox,\n  border,\n  shadow,\n} from 'styled-system';\n\nexport const Box = styled.div`\n   {\n    box-sizing: border-box;\n  }\n  ${color}\n  ${space}\n  ${typography}\n  ${layout}\n  ${flexbox}\n  ${border}\n  ${shadow}\n`;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 700px;\n  margin-bottom: 20px;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  padding-left: 20px;\n  background-color: white;\n  display: block;\n  border-radius: 8px;\n  box-shadow: 1px 1px 6px black;\n`;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  padding-bottom: 5px;\n  text-transform: capitalize;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  margin-top: 5px;\n  margin-bottom: 5px;\n  padding: 10px;\n  font-size: 20px;\n  background-color: rgb(239 239 239);\n  border: 1px solid transparent;\n  border-radius: 5px;\n  box-shadow: inset 1px 1px 5px grey;\n  outline: none;\n\n  &:hover,\n  &:focus {\n    border-color: grey;\n    outline: none;\n  }\n\n  &: focus {\n    background-color: white;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  margin: 0;\n  padding-bottom: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport { Title } from './Heading.styled';\n\nexport const Heading = ({ title }) => {\n  return <Title>{title}</Title>;\n};\n\nHeading.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Btn = styled.button`\n  display: block;\n  padding: 10px 20px;\n  font-size: 16px;\n  background-color: rgb(239 239 239);\n  border: 1px solid transparent;\n  border-radius: 5px;\n  box-shadow: 1px 1px 5px grey;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    border-color: grey;\n    box-shadow: 1px 1px 2px grey;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { Btn } from './SubmitButton.styled';\n\nexport const SubmitButton = ({ text, type }) => {\n  return <Btn type={type}>{text}</Btn>;\n};\n\nSubmitButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n};\n","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Box } from 'components/Box';\nimport { Form } from 'components/Form/Form.styled';\nimport { Label, Input } from 'components/Form/FormInput/FormInput.styled';\nimport { SubmitButton } from 'components/SubmitButton';\nimport { logIn } from 'redux/operations';\n\nexport const LoginForm = () => {\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n\n  const resetState = () => {\n    setEmail('');\n    setPassword('');\n  };\n\n  const handleChange = ({ target: { name, value } }) => {\n    switch (name) {\n      case 'email':\n        return setEmail(value);\n      case 'password':\n        return setPassword(value);\n      default:\n        return;\n    }\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    dispatch(logIn({ email, password }));\n    resetState();\n  };\n\n  return (\n    <Form autocomplete=\"off\" onSubmit={handleSubmit}>\n      <Box pb=\"20px\">\n        <Label>\n          Email\n          <Input\n            type=\"email\"\n            name=\"email\"\n            value={email}\n            onChange={handleChange}\n          />\n        </Label>\n        <Label>\n          Password\n          <Input\n            type=\"password\"\n            name=\"password\"\n            value={password}\n            onChange={handleChange}\n          />\n        </Label>\n      </Box>\n      <SubmitButton type=\"submit\" text=\"Log In\" />\n    </Form>\n  );\n};\n","import { Box } from 'components/Box';\nimport { Heading } from 'components/Heading';\nimport { LoginForm } from 'components/Form/LoginForm/LoginForm';\n\nconst Login = () => {\n  return (\n    <section>\n      <Heading title=\"Log In\" />\n      <Box pb=\"20px\">\n        <LoginForm />\n      </Box>\n    </section>\n  );\n};\n\nexport default Login;\n"],"names":["Box","styled","color","space","typography","layout","flexbox","border","shadow","Form","Label","Input","Title","Heading","title","Btn","SubmitButton","text","type","LoginForm","dispatch","useDispatch","useState","email","setEmail","password","setPassword","handleChange","target","name","value","autocomplete","onSubmit","evt","preventDefault","logIn","pb","I","onChange"],"sourceRoot":""}