{"version":3,"file":"static/js/0.f208a447.chunk.js","mappings":"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","sources":["components/Box.jsx","components/Form/Form.styled.jsx","components/Form/FormInput/FormInput.styled.jsx","components/Heading/Heading.styled.jsx","components/Heading/Heading.jsx","components/SubmitButton/SubmitButton.styled.jsx","components/SubmitButton/SubmitButton.jsx","../node_modules/reselect/es/defaultMemoize.js","../node_modules/reselect/es/index.js","redux/selectors.js","../node_modules/nanoid/index.browser.js","components/Form/FormInput/FormInput.jsx","components/Form/Form.jsx","components/SubHeading/SubHeading.styled.jsx","components/SubHeading/SubHeading.jsx","components/Search/Search.styled.jsx","components/Search/Search.jsx","components/ContactList/ContactList.styled.jsx","components/DeleteButton/DeleteButton.styled.jsx","components/DeleteButton/DeleteButton.jsx","components/ContactList/Contact/Contact.jsx","components/ContactList/ContactList.jsx","pages/Contacts.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  color,\n  space,\n  typography,\n  layout,\n  flexbox,\n  border,\n  shadow,\n} from 'styled-system';\n\nexport const Box = styled.div`\n   {\n    box-sizing: border-box;\n  }\n  ${color}\n  ${space}\n  ${typography}\n  ${layout}\n  ${flexbox}\n  ${border}\n  ${shadow}\n`;\n","import styled from 'styled-components';\n\nexport const Form = styled.form`\n  width: 700px;\n  margin-bottom: 20px;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  padding-left: 20px;\n  background-color: white;\n  display: block;\n  border-radius: 8px;\n  box-shadow: 1px 1px 6px black;\n`;\n","import styled from 'styled-components';\n\nexport const Label = styled.label`\n  padding-bottom: 5px;\n  text-transform: capitalize;\n`;\n\nexport const Input = styled.input`\n  display: block;\n  margin-top: 5px;\n  margin-bottom: 5px;\n  padding: 10px;\n  font-size: 20px;\n  background-color: rgb(239 239 239);\n  border: 1px solid transparent;\n  border-radius: 5px;\n  box-shadow: inset 1px 1px 5px grey;\n  outline: none;\n\n  &:hover,\n  &:focus {\n    border-color: grey;\n    outline: none;\n  }\n\n  &: focus {\n    background-color: white;\n  }\n`;\n","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n  margin: 0;\n  padding-bottom: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport { Title } from './Heading.styled';\n\nexport const Heading = ({ title }) => {\n  return <Title>{title}</Title>;\n};\n\nHeading.propTypes = {\n  title: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const Btn = styled.button`\n  display: block;\n  padding: 10px 20px;\n  font-size: 16px;\n  background-color: rgb(239 239 239);\n  border: 1px solid transparent;\n  border-radius: 5px;\n  box-shadow: 1px 1px 5px grey;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    border-color: grey;\n    box-shadow: 1px 1px 2px grey;\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { Btn } from './SubmitButton.styled';\n\nexport const SubmitButton = ({ text, type }) => {\n  return <Btn type={type}>{text}</Btn>;\n};\n\nSubmitButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n};\n","// Cache implementation based on Erik Rasmussen's `lru-memoize`:\n// https://github.com/erikras/lru-memoize\nvar NOT_FOUND = 'NOT_FOUND';\n\nfunction createSingletonCache(equals) {\n  var entry;\n  return {\n    get: function get(key) {\n      if (entry && equals(entry.key, key)) {\n        return entry.value;\n      }\n\n      return NOT_FOUND;\n    },\n    put: function put(key, value) {\n      entry = {\n        key: key,\n        value: value\n      };\n    },\n    getEntries: function getEntries() {\n      return entry ? [entry] : [];\n    },\n    clear: function clear() {\n      entry = undefined;\n    }\n  };\n}\n\nfunction createLruCache(maxSize, equals) {\n  var entries = [];\n\n  function get(key) {\n    var cacheIndex = entries.findIndex(function (entry) {\n      return equals(key, entry.key);\n    }); // We found a cached entry\n\n    if (cacheIndex > -1) {\n      var entry = entries[cacheIndex]; // Cached entry not at top of cache, move it to the top\n\n      if (cacheIndex > 0) {\n        entries.splice(cacheIndex, 1);\n        entries.unshift(entry);\n      }\n\n      return entry.value;\n    } // No entry found in cache, return sentinel\n\n\n    return NOT_FOUND;\n  }\n\n  function put(key, value) {\n    if (get(key) === NOT_FOUND) {\n      // TODO Is unshift slow?\n      entries.unshift({\n        key: key,\n        value: value\n      });\n\n      if (entries.length > maxSize) {\n        entries.pop();\n      }\n    }\n  }\n\n  function getEntries() {\n    return entries;\n  }\n\n  function clear() {\n    entries = [];\n  }\n\n  return {\n    get: get,\n    put: put,\n    getEntries: getEntries,\n    clear: clear\n  };\n}\n\nexport var defaultEqualityCheck = function defaultEqualityCheck(a, b) {\n  return a === b;\n};\nexport function createCacheKeyComparator(equalityCheck) {\n  return function areArgumentsShallowlyEqual(prev, next) {\n    if (prev === null || next === null || prev.length !== next.length) {\n      return false;\n    } // Do this in a for loop (and not a `forEach` or an `every`) so we can determine equality as fast as possible.\n\n\n    var length = prev.length;\n\n    for (var i = 0; i < length; i++) {\n      if (!equalityCheck(prev[i], next[i])) {\n        return false;\n      }\n    }\n\n    return true;\n  };\n}\n// defaultMemoize now supports a configurable cache size with LRU behavior,\n// and optional comparison of the result value with existing values\nexport function defaultMemoize(func, equalityCheckOrOptions) {\n  var providedOptions = typeof equalityCheckOrOptions === 'object' ? equalityCheckOrOptions : {\n    equalityCheck: equalityCheckOrOptions\n  };\n  var _providedOptions$equa = providedOptions.equalityCheck,\n      equalityCheck = _providedOptions$equa === void 0 ? defaultEqualityCheck : _providedOptions$equa,\n      _providedOptions$maxS = providedOptions.maxSize,\n      maxSize = _providedOptions$maxS === void 0 ? 1 : _providedOptions$maxS,\n      resultEqualityCheck = providedOptions.resultEqualityCheck;\n  var comparator = createCacheKeyComparator(equalityCheck);\n  var cache = maxSize === 1 ? createSingletonCache(comparator) : createLruCache(maxSize, comparator); // we reference arguments instead of spreading them for performance reasons\n\n  function memoized() {\n    var value = cache.get(arguments);\n\n    if (value === NOT_FOUND) {\n      // @ts-ignore\n      value = func.apply(null, arguments);\n\n      if (resultEqualityCheck) {\n        var entries = cache.getEntries();\n        var matchingEntry = entries.find(function (entry) {\n          return resultEqualityCheck(entry.value, value);\n        });\n\n        if (matchingEntry) {\n          value = matchingEntry.value;\n        }\n      }\n\n      cache.put(arguments, value);\n    }\n\n    return value;\n  }\n\n  memoized.clearCache = function () {\n    return cache.clear();\n  };\n\n  return memoized;\n}","import { defaultMemoize, defaultEqualityCheck } from './defaultMemoize';\nexport { defaultMemoize, defaultEqualityCheck };\n\nfunction getDependencies(funcs) {\n  var dependencies = Array.isArray(funcs[0]) ? funcs[0] : funcs;\n\n  if (!dependencies.every(function (dep) {\n    return typeof dep === 'function';\n  })) {\n    var dependencyTypes = dependencies.map(function (dep) {\n      return typeof dep === 'function' ? \"function \" + (dep.name || 'unnamed') + \"()\" : typeof dep;\n    }).join(', ');\n    throw new Error(\"createSelector expects all input-selectors to be functions, but received the following types: [\" + dependencyTypes + \"]\");\n  }\n\n  return dependencies;\n}\n\nexport function createSelectorCreator(memoize) {\n  for (var _len = arguments.length, memoizeOptionsFromArgs = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    memoizeOptionsFromArgs[_key - 1] = arguments[_key];\n  }\n\n  var createSelector = function createSelector() {\n    for (var _len2 = arguments.length, funcs = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n      funcs[_key2] = arguments[_key2];\n    }\n\n    var _recomputations = 0;\n\n    var _lastResult; // Due to the intricacies of rest params, we can't do an optional arg after `...funcs`.\n    // So, start by declaring the default value here.\n    // (And yes, the words 'memoize' and 'options' appear too many times in this next sequence.)\n\n\n    var directlyPassedOptions = {\n      memoizeOptions: undefined\n    }; // Normally, the result func or \"output selector\" is the last arg\n\n    var resultFunc = funcs.pop(); // If the result func is actually an _object_, assume it's our options object\n\n    if (typeof resultFunc === 'object') {\n      directlyPassedOptions = resultFunc; // and pop the real result func off\n\n      resultFunc = funcs.pop();\n    }\n\n    if (typeof resultFunc !== 'function') {\n      throw new Error(\"createSelector expects an output function after the inputs, but received: [\" + typeof resultFunc + \"]\");\n    } // Determine which set of options we're using. Prefer options passed directly,\n    // but fall back to options given to createSelectorCreator.\n\n\n    var _directlyPassedOption = directlyPassedOptions,\n        _directlyPassedOption2 = _directlyPassedOption.memoizeOptions,\n        memoizeOptions = _directlyPassedOption2 === void 0 ? memoizeOptionsFromArgs : _directlyPassedOption2; // Simplifying assumption: it's unlikely that the first options arg of the provided memoizer\n    // is an array. In most libs I've looked at, it's an equality function or options object.\n    // Based on that, if `memoizeOptions` _is_ an array, we assume it's a full\n    // user-provided array of options. Otherwise, it must be just the _first_ arg, and so\n    // we wrap it in an array so we can apply it.\n\n    var finalMemoizeOptions = Array.isArray(memoizeOptions) ? memoizeOptions : [memoizeOptions];\n    var dependencies = getDependencies(funcs);\n    var memoizedResultFunc = memoize.apply(void 0, [function recomputationWrapper() {\n      _recomputations++; // apply arguments instead of spreading for performance.\n\n      return resultFunc.apply(null, arguments);\n    }].concat(finalMemoizeOptions)); // If a selector is called with the exact same arguments we don't need to traverse our dependencies again.\n\n    var selector = memoize(function dependenciesChecker() {\n      var params = [];\n      var length = dependencies.length;\n\n      for (var i = 0; i < length; i++) {\n        // apply arguments instead of spreading and mutate a local list of params for performance.\n        // @ts-ignore\n        params.push(dependencies[i].apply(null, arguments));\n      } // apply arguments instead of spreading for performance.\n\n\n      _lastResult = memoizedResultFunc.apply(null, params);\n      return _lastResult;\n    });\n    Object.assign(selector, {\n      resultFunc: resultFunc,\n      memoizedResultFunc: memoizedResultFunc,\n      dependencies: dependencies,\n      lastResult: function lastResult() {\n        return _lastResult;\n      },\n      recomputations: function recomputations() {\n        return _recomputations;\n      },\n      resetRecomputations: function resetRecomputations() {\n        return _recomputations = 0;\n      }\n    });\n    return selector;\n  }; // @ts-ignore\n\n\n  return createSelector;\n}\nexport var createSelector = /* #__PURE__ */createSelectorCreator(defaultMemoize);\n// Manual definition of state and output arguments\nexport var createStructuredSelector = function createStructuredSelector(selectors, selectorCreator) {\n  if (selectorCreator === void 0) {\n    selectorCreator = createSelector;\n  }\n\n  if (typeof selectors !== 'object') {\n    throw new Error('createStructuredSelector expects first argument to be an object ' + (\"where each property is a selector, instead received a \" + typeof selectors));\n  }\n\n  var objectKeys = Object.keys(selectors);\n  var resultSelector = selectorCreator( // @ts-ignore\n  objectKeys.map(function (key) {\n    return selectors[key];\n  }), function () {\n    for (var _len3 = arguments.length, values = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      values[_key3] = arguments[_key3];\n    }\n\n    return values.reduce(function (composition, value, index) {\n      composition[objectKeys[index]] = value;\n      return composition;\n    }, {});\n  });\n  return resultSelector;\n};","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts;\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\nexport const selectFilteredContacts = state => state.filter;\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilteredContacts],\n  (contacts, filter) => {\n    const normalizedSearch = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedSearch)\n    );\n  }\n);\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","import PropTypes from 'prop-types';\n\nimport { Label, Input } from './FormInput.styled';\n\nexport const FormName = ({ value, onChange }) => {\n  return (\n    <Label>\n      Name\n      <Input\n        name=\"name\"\n        type=\"text\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        onChange={onChange}\n        value={value}\n        required\n      />\n    </Label>\n  );\n};\n\nexport const FormNumber = ({ value, onChange }) => {\n  return (\n    <Label>\n      Number\n      <Input\n        name=\"number\"\n        type=\"text\"\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        onChange={onChange}\n        value={value}\n        required\n      />\n    </Label>\n  );\n};\n\nFormName.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n\nFormNumber.propTypes = {\n  value: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n};\n","import { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport { addContact } from 'redux/operations';\nimport { nanoid } from 'nanoid';\nimport { Box } from '../Box';\nimport { Form } from './Form.styled';\nimport { FormName, FormNumber } from './FormInput';\nimport { SubmitButton } from '../SubmitButton';\n\nconst showAlertMessage = contactName =>\n  alert(`${contactName} is already in contacts.`);\n\nexport const FormBox = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleInputChange = evt => {\n    const { name, value } = evt.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const checkContactsForMatches = formData => {\n    const normalizedName = formData.name.toLowerCase();\n    return contacts.some(\n      contact => contact.name.toLowerCase() === normalizedName\n    );\n  };\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const formData = { name, number };\n    const doesMatch = checkContactsForMatches(formData);\n    if (doesMatch) {\n      showAlertMessage(formData.name);\n      return;\n    }\n    dispatch(addContact({ id: nanoid(6), ...formData }));\n\n    reset();\n  };\n\n  return (\n    <Form autocomplete=\"off\" onSubmit={handleSubmit}>\n      <Box pb=\"20px\" display=\"flex\" alignItems=\"center\" style={{ gap: '20px' }}>\n        <FormName value={name} onChange={handleInputChange} />\n        <FormNumber value={number} onChange={handleInputChange} />\n      </Box>\n      <SubmitButton type=\"submit\" text=\"Add Contact\" />\n    </Form>\n  );\n};\n","import styled from 'styled-components';\n\nexport const SubTitle = styled.h2`\n  margin: 0;\n  padding-top: 20px;\n  padding-bottom: 20px;\n`;\n","import PropTypes from 'prop-types';\nimport { SubTitle } from './SubHeading.styled';\n\nexport const SubHeading = ({ subtitle }) => {\n  return <SubTitle>{subtitle}</SubTitle>;\n};\n\nSubHeading.propTypes = {\n  subtitle: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const SearchLabel = styled.label`\n  padding-bottom: 5px;\n`;\n\nexport const SearchInput = styled.input`\n  display: block;\n  margin-top: 5px;\n  margin-bottom: 5px;\n  padding: 10px;\n  font-size: 20px;\n  background-color: rgb(239 239 239);\n  border: 1px solid transparent;\n  border-radius: 5px;\n  box-shadow: inset 1px 1px 5px grey;\n  outline: none;\n\n  &:hover,\n  &:focus {\n    border-color: grey;\n    outline: none;\n  }\n\n  &: focus {\n    background-color: white;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { updateFilter } from 'redux/filterSlice';\nimport { useDispatch } from 'react-redux';\nimport { SearchLabel, SearchInput } from './Search.styled';\n\nexport const Search = ({ searchLabel }) => {\n  const dispatch = useDispatch();\n  return (\n    <SearchLabel>\n      {searchLabel}\n      <SearchInput\n        name=\"search\"\n        type=\"text\"\n        onChange={evt => dispatch(updateFilter(evt.currentTarget.value))}\n      />\n    </SearchLabel>\n  );\n};\n\nSearch.propTypes = {\n  searchLabel: PropTypes.string.isRequired,\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  padding-left: 20px;\n`;\n","import styled from 'styled-components';\n\nexport const Btn = styled.button`\n  display: inline-block;\n  padding: 5px 10px;\n  font-size: 12px;\n  background-color: rgb(239 239 239);\n  border: 1px solid transparent;\n  border-radius: 5px;\n  box-shadow: 1px 1px 5px grey;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    border-color: grey;\n    box-shadow: 1px 1px 2px grey;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { deleteContact } from 'redux/operations';\nimport { Btn } from './DeleteButton.styled';\n\nexport const DeleteButton = ({ text, type, id }) => {\n  const dispatch = useDispatch();\n\n  return (\n    <Btn type={type} onClick={() => dispatch(deleteContact(id))}>\n      {text}\n    </Btn>\n  );\n};\n\nDeleteButton.propTypes = {\n  text: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nimport { DeleteButton } from '../../DeleteButton';\n\nexport const Contact = ({ contact }) => (\n  <li style={{ marginBottom: '20px' }}>\n    {contact.name}: {contact.phone}{' '}\n    <DeleteButton type=\"button\" text=\"Delete\" id={contact.id} />\n  </li>\n);\n\nContact.propTypes = {\n  contact: PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    phone: PropTypes.string.isRequired,\n    id: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  selectVisibleContacts,\n  selectIsLoading,\n  selectError,\n} from 'redux/selectors';\nimport { fetchContacts } from 'redux/operations';\nimport { List } from './ContactList.styled';\nimport { Contact } from './Contact';\n\nexport const ContactList = () => {\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <>\n      {isLoading && <p>Wait, please. We are loading contacts.</p>}\n\n      {error && <p>{error}</p>}\n\n      {!isLoading && visibleContacts.length === 0 && (\n        <p>Oops... No contacts found.</p>\n      )}\n\n      {!isLoading && visibleContacts.length !== 0 ? (\n        <List>\n          {visibleContacts.map(contact => {\n            return <Contact key={contact.name} contact={contact} />;\n          })}\n        </List>\n      ) : (\n        ''\n      )}\n    </>\n  );\n};\n","import { Box } from 'components/Box';\nimport { Heading } from 'components/Heading';\nimport { FormBox } from 'components/Form';\nimport { SubHeading } from 'components/SubHeading';\nimport { Search } from 'components/Search';\nimport { ContactList } from 'components/ContactList';\n\nconst Contacts = () => {\n  return (\n    <>\n      <section>\n        <Heading title=\"Phonebook\" />\n        <FormBox />\n      </section>\n      <Box\n        width=\"720px\"\n        pl=\"20px\"\n        bg=\"white\"\n        borderRadius=\"8px\"\n        boxShadow=\"1px 1px 6px black\"\n        as=\"section\"\n      >\n        <SubHeading subtitle=\"Contacts\" />\n        <Search searchLabel=\"Find contacts by name\" />\n        <Box pb=\"20px\" minHeight=\"20em\" bg=\"white\" borderRadius=\"8px\">\n          <ContactList />\n        </Box>\n      </Box>\n    </>\n  );\n};\n\nexport default Contacts;\n"],"names":["Box","styled","color","space","typography","layout","flexbox","border","shadow","Form","Label","Input","Title","Heading","title","Btn","SubmitButton","text","type","NOT_FOUND","defaultEqualityCheck","a","b","defaultMemoize","func","equalityCheckOrOptions","providedOptions","equalityCheck","_providedOptions$equa","_providedOptions$maxS","maxSize","resultEqualityCheck","comparator","prev","next","length","i","createCacheKeyComparator","cache","equals","entry","get","key","value","put","getEntries","clear","undefined","createSingletonCache","entries","cacheIndex","findIndex","splice","unshift","pop","createLruCache","memoized","arguments","apply","matchingEntry","find","clearCache","getDependencies","funcs","dependencies","Array","isArray","every","dep","dependencyTypes","map","name","join","Error","createSelectorCreator","memoize","_len","memoizeOptionsFromArgs","_key","createSelector","_len2","_key2","_lastResult","_recomputations","directlyPassedOptions","memoizeOptions","resultFunc","_directlyPassedOption","_directlyPassedOption2","finalMemoizeOptions","memoizedResultFunc","concat","selector","params","push","Object","assign","lastResult","recomputations","resetRecomputations","selectContacts","state","contacts","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","filter","normalizedSearch","toLowerCase","contact","includes","nanoid","size","crypto","getRandomValues","Uint8Array","reduce","id","byte","toString","toUpperCase","FormName","onChange","I","pattern","required","FormNumber","FormBox","dispatch","useDispatch","useSelector","useState","setName","number","setNumber","handleInputChange","evt","currentTarget","autocomplete","onSubmit","preventDefault","formData","doesMatch","normalizedName","some","checkContactsForMatches","alert","addContact","pb","display","alignItems","style","gap","SubTitle","SubHeading","subtitle","SearchLabel","SearchInput","Search","searchLabel","updateFilter","List","DeleteButton","onClick","deleteContact","Contact","marginBottom","phone","ContactList","visibleContacts","useEffect","fetchContacts","width","pl","bg","borderRadius","boxShadow","as","minHeight"],"sourceRoot":""}